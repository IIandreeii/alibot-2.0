{
    "sourceFile": "src/services/phone-number/getPhoneNumber.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1740154808696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740154815959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState } from 'react';\n import { useAxios } from '../../hooks/use-axios';\n import Cookies from 'js-cookie';\n import { useNavigate } from 'react-router-dom';\n-import { useAuth } from 'context/AuthContext';\n+import { useAuth } from '../../context/AuthContext';\n \n export interface PhoneNumber {\n   accountUserId: number;\n   phoneNumberId: string;\n"
                }
            ],
            "date": 1740154808696,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\nimport { useAxios } from '../../hooks/use-axios';\nimport Cookies from 'js-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from 'context/AuthContext';\n\nexport interface PhoneNumber {\n  accountUserId: number;\n  phoneNumberId: string;\n  phone: string;\n  tokenMeta: string;\n  nickname: string;\n  isAssistantAi: boolean;\n}\n\ntype LoaderState = {\n  loading: boolean;\n  action: 'get' | 'post' | 'put' | 'putDisabled' | null;\n};\n\nexport const usePhoneNumberWithLoader = () => {\n  const { execute } = useAxios<any>();\n  const { logout } = useAuth(); // Usamos el método login del contexto\n  \n  const [getResponse, setGetResponse] = useState<PhoneNumber[]>([]);\n  const [postResponse, setPostResponse] = useState<any>(null);\n  const [putResponse, setPutResponse] = useState<any>(null);\n  const [putDisabledResponse, setPutDisabledResponse] = useState<any>(null);\n  const navigate = useNavigate(); \n  \n  const [loader, setLoader] = useState<LoaderState>({ loading: false, action: null });\n\n  const getPhoneNumber = async () => {\n    const storedId = Cookies.get('authId');\n    console.log(\"ASDSADASDDAS\", !storedId);\n    \n    if (!storedId) {\n      logout()\n      navigate('/login')\n      return ;\n    }\n\n    setLoader({ loading: true, action: 'get' });\n    const method = 'GET';\n    const url = `/phone-number/account/${storedId}`;\n\n    try {\n      const data = await execute({ method, url });\n      console.log('Datos obtenidos en getPhoneNumber:', data);\n      setGetResponse(data);\n      return data;\n    } catch (error) {\n      console.error('Error obteniendo los datos:', error);\n    } finally {\n    }\n  };\n\n  const postPhoneNumber = async (data: PhoneNumber) => {\n    const method = 'POST';\n    const url = '/phone-number/create';\n\n    try {\n      const response = await execute({ method, url, data });\n      setPostResponse(response);\n      await getPhoneNumber(); \n    } catch (error) {\n      console.error('Error creando el número de teléfono:', error);\n    } finally {\n    }\n  };\n\n  const putPhoneNumber = async (data: any, id: any) => {\n    const method = 'PATCH';\n    const url = `/phone-number/update/${id}`;\n\n    try {\n      const response = await execute({ method, url, data });\n      setPutResponse(response);\n      await getPhoneNumber(); \n    } catch (error) {\n      console.error('Error actualizando el número de teléfono:', error);\n    } finally {\n    }\n  };\n\n  const putChangeStatusMessage = async (data: any, nro_telefono: any) => {\n    const method = 'PATCH';\n    const url = `/webhook/change-status-message/${nro_telefono}`;\n\n    try {\n      const response = await execute({ method, url, data });\n      setPutResponse(response);\n      await getPhoneNumber(); \n    } catch (error) {\n      console.error('Error actualizando el número de teléfono:', error);\n    } finally {\n    }\n  };\n\n  const putPhoneDisabled = async (data: any, id: any) => {\n    setLoader({ loading: true, action: 'putDisabled' });\n    const method = 'PATCH';\n    const url = `/phone-number/delete/${id}`;\n\n    try {\n      const response = await execute({ method, url, data });\n      setPutDisabledResponse(response);\n      await getPhoneNumber(); \n    } catch (error) {\n      console.error('Error deshabilitando el número de teléfono:', error);\n    } finally {\n    }\n  };\n  \n\n  return {\n    getPhoneNumber,\n    postPhoneNumber,\n    putPhoneNumber,\n    putPhoneDisabled,\n    putChangeStatusMessage,\n    setLoader,\n    loader, \n    getResponse,\n    postResponse,\n    putResponse,\n    putDisabledResponse,\n  };\n};\n"
        }
    ]
}