{
    "sourceFile": "src/services/auth/login.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1740154827695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740154845807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { useState } from 'react';\n import axios from 'axios';\n-import { useAuth } from '../context/AuthContext';\n+import { useAuth } from '../../context/AuthContext';\n import { environment } from 'environments/environment.prod';\n import { useToast } from 'context/ToastContext';\n \n axios.defaults.baseURL = environment.apiUrl;\n"
                },
                {
                    "date": 1740154851715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { useState } from 'react';\n import axios from 'axios';\n import { useAuth } from '../../context/AuthContext';\n-import { environment } from 'environments/environment.prod';\n+import { environment } from '../../environments/environment.prod';\n import { useToast } from 'context/ToastContext';\n \n axios.defaults.baseURL = environment.apiUrl;\n \n"
                },
                {
                    "date": 1740154857036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState } from 'react';\n import axios from 'axios';\n import { useAuth } from '../../context/AuthContext';\n import { environment } from '../../environments/environment.prod';\n-import { useToast } from 'context/ToastContext';\n+import { useToast } from '../../context/ToastContext';\n \n axios.defaults.baseURL = environment.apiUrl;\n \n export const useLogin = () => {\n"
                },
                {
                    "date": 1740154929263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,15 +5,22 @@\n import { useToast } from '../../context/ToastContext';\n \n axios.defaults.baseURL = environment.apiUrl;\n \n+interface LoginResponse {\n+  token: string;\n+  account: {\n+    id: string;\n+  };\n+}\n+\n export const useLogin = () => {\n   const { login } = useAuth(); // Usamos el método login del contexto\n   const [getResponse, setGetResponse] = useState<any>(null);\n   const [loader, setLoader] = useState({ loading: false, action: '' });\n   const { showError } = useToast();\n \n-  const postLogin = async (data: { username: string; password: string }) => {\n+      const response = await axios.request<LoginResponse>({\n     const method = 'POST';\n     const url = '/auth/authentication';\n \n     setLoader({ loading: true, action: 'post' });\n"
                },
                {
                    "date": 1740154941732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,22 +5,15 @@\n import { useToast } from '../../context/ToastContext';\n \n axios.defaults.baseURL = environment.apiUrl;\n \n-interface LoginResponse {\n-  token: string;\n-  account: {\n-    id: string;\n-  };\n-}\n-\n export const useLogin = () => {\n   const { login } = useAuth(); // Usamos el método login del contexto\n   const [getResponse, setGetResponse] = useState<any>(null);\n   const [loader, setLoader] = useState({ loading: false, action: '' });\n   const { showError } = useToast();\n \n-      const response = await axios.request<LoginResponse>({\n+  const postLogin = async (data: { username: string; password: string }) => {\n     const method = 'POST';\n     const url = '/auth/authentication';\n \n     setLoader({ loading: true, action: 'post' });\n"
                },
                {
                    "date": 1740155061054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,18 @@\n import { useToast } from '../../context/ToastContext';\n \n axios.defaults.baseURL = environment.apiUrl;\n \n+interface LoginResponse {\n+  token: string;\n+  account: {\n+    id: string;\n+  };\n+}\n+\n export const useLogin = () => {\n   const { login } = useAuth(); // Usamos el método login del contexto\n-  const [getResponse, setGetResponse] = useState<any>(null);\n+  const [getResponse, setGetResponse] = useState<LoginResponse | null>(null);\n   const [loader, setLoader] = useState({ loading: false, action: '' });\n   const { showError } = useToast();\n \n   const postLogin = async (data: { username: string; password: string }) => {\n@@ -18,9 +25,9 @@\n \n     setLoader({ loading: true, action: 'post' });\n \n     try {\n-      const response = await axios.request({\n+      const response = await axios.request<LoginResponse>({\n         method,\n         url,\n         data,\n       });\n@@ -48,5 +55,5 @@\n     postLogin,\n     loader,\n     getResponse,\n   };\n-};\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740155120848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,15 @@\n import { useState } from 'react';\n import axios from 'axios';\n-import { useAuth } from '../../context/AuthContext';\n-import { environment } from '../../environments/environment.prod';\n-import { useToast } from '../../context/ToastContext';\n+import { useAuth } from '../context/AutContext';\n+import { environment } from '../../environments/environments';\n+import { useToast } from '../context/toastContext';\n \n axios.defaults.baseURL = environment.apiUrl;\n \n-interface LoginResponse {\n-  token: string;\n-  account: {\n-    id: string;\n-  };\n-}\n-\n export const useLogin = () => {\n   const { login } = useAuth(); // Usamos el método login del contexto\n-  const [getResponse, setGetResponse] = useState<LoginResponse | null>(null);\n+  const [getResponse, setGetResponse] = useState<any>(null);\n   const [loader, setLoader] = useState({ loading: false, action: '' });\n   const { showError } = useToast();\n \n   const postLogin = async (data: { username: string; password: string }) => {\n@@ -25,9 +18,9 @@\n \n     setLoader({ loading: true, action: 'post' });\n \n     try {\n-      const response = await axios.request<LoginResponse>({\n+      const response = await axios.request({\n         method,\n         url,\n         data,\n       });\n@@ -55,5 +48,5 @@\n     postLogin,\n     loader,\n     getResponse,\n   };\n-};\n\\ No newline at end of file\n+};\n"
                },
                {
                    "date": 1740155129699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,22 @@\n import { useState } from 'react';\n import axios from 'axios';\n-import { useAuth } from '../context/AutContext';\n-import { environment } from '../../environments/environments';\n-import { useToast } from '../context/toastContext';\n+import { useAuth } from '../../context/AuthContext';\n+import { environment } from '../../environments/environment.prod';\n+import { useToast } from '../../context/ToastContext';\n \n axios.defaults.baseURL = environment.apiUrl;\n \n+interface LoginResponse {\n+  token: string;\n+  account: {\n+    id: string;\n+  };\n+}\n+\n export const useLogin = () => {\n   const { login } = useAuth(); // Usamos el método login del contexto\n-  const [getResponse, setGetResponse] = useState<any>(null);\n+  const [getResponse, setGetResponse] = useState<LoginResponse | null>(null);\n   const [loader, setLoader] = useState({ loading: false, action: '' });\n   const { showError } = useToast();\n \n   const postLogin = async (data: { username: string; password: string }) => {\n@@ -18,9 +25,9 @@\n \n     setLoader({ loading: true, action: 'post' });\n \n     try {\n-      const response = await axios.request({\n+      const response = await axios.request<LoginResponse>({\n         method,\n         url,\n         data,\n       });\n@@ -48,5 +55,5 @@\n     postLogin,\n     loader,\n     getResponse,\n   };\n-};\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740155135318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,18 +5,11 @@\n import { useToast } from '../../context/ToastContext';\n \n axios.defaults.baseURL = environment.apiUrl;\n \n-interface LoginResponse {\n-  token: string;\n-  account: {\n-    id: string;\n-  };\n-}\n-\n export const useLogin = () => {\n   const { login } = useAuth(); // Usamos el método login del contexto\n-  const [getResponse, setGetResponse] = useState<LoginResponse | null>(null);\n+  const [getResponse, setGetResponse] = useState<any>(null);\n   const [loader, setLoader] = useState({ loading: false, action: '' });\n   const { showError } = useToast();\n \n   const postLogin = async (data: { username: string; password: string }) => {\n@@ -25,9 +18,9 @@\n \n     setLoader({ loading: true, action: 'post' });\n \n     try {\n-      const response = await axios.request<LoginResponse>({\n+      const response = await axios.request({\n         method,\n         url,\n         data,\n       });\n@@ -55,5 +48,5 @@\n     postLogin,\n     loader,\n     getResponse,\n   };\n-};\n\\ No newline at end of file\n+};\n"
                }
            ],
            "date": 1740154827695,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport { environment } from 'environments/environment.prod';\nimport { useToast } from 'context/ToastContext';\n\naxios.defaults.baseURL = environment.apiUrl;\n\nexport const useLogin = () => {\n  const { login } = useAuth(); // Usamos el método login del contexto\n  const [getResponse, setGetResponse] = useState<any>(null);\n  const [loader, setLoader] = useState({ loading: false, action: '' });\n  const { showError } = useToast();\n\n  const postLogin = async (data: { username: string; password: string }) => {\n    const method = 'POST';\n    const url = '/auth/authentication';\n\n    setLoader({ loading: true, action: 'post' });\n\n    try {\n      const response = await axios.request({\n        method,\n        url,\n        data,\n      });\n      console.log(\"Response data in postLogin:\", response.data); // Log para verificar\n\n      // Asegúrate de que aquí manejas la respuesta correctamente\n      if (response.data && response.data.token) {\n        login(response.data.token, response.data.account.id);\n        setGetResponse(response.data);\n      } else {\n        console.error('Token no encontrado en la respuesta:', response.data);\n        setGetResponse(response.data); // Esto podría ser undefined si no hay token\n      }\n    } catch (error: any) {\n      showError(error.response.data.message);\n      console.error('Error durante la autenticación:', error.response.data.message);\n\n      return error;\n    } finally {\n      setLoader({ loading: false, action: '' });\n    }\n  };\n\n  return {\n    postLogin,\n    loader,\n    getResponse,\n  };\n};\n"
        }
    ]
}