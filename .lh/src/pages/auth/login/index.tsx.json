{
    "sourceFile": "src/pages/auth/login/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1740154310068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740154317876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { Toast } from 'primereact/toast';\n import React, { useEffect, useRef, useState } from 'react';\n import { useForm } from 'react-hook-form';\n-import { useLogin } from '../../../../../../../../../../../../services/auth/login.service';\n+import { useLogin } from '../../../../../../../../../../../..services/auth/login.service';\n import styled from 'styled-components';\n import { Link, useNavigate } from 'react-router-dom';\n import { useChatContext } from 'pages/chat/context/chat';\n import { auth, googleProvider } from '../../../libs/firebase';\n"
                },
                {
                    "date": 1740154332208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { Toast } from 'primereact/toast';\n import React, { useEffect, useRef, useState } from 'react';\n import { useForm } from 'react-hook-form';\n-import { useLogin } from '../../auth';\n+import { useLogin } from '../../auth/';\n import styled from 'styled-components';\n import { Link, useNavigate } from 'react-router-dom';\n import { useChatContext } from 'pages/chat/context/chat';\n import { auth, googleProvider } from '../../../libs/firebase';\n"
                }
            ],
            "date": 1740154310068,
            "name": "Commit-0",
            "content": "import { Toast } from 'primereact/toast';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useLogin } from '../../../../../../../services/auth/login.service';\nimport styled from 'styled-components';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useChatContext } from 'pages/chat/context/chat';\nimport { auth, googleProvider } from '../../../libs/firebase';\nimport { signInWithPopup } from 'firebase/auth';\n\ninterface LoginFormInputs {\n  username: string;\n  password: string;\n}\n\nconst primaryColor = '#25D366'; \nconst secondaryColor = '#128C7E'; \nconst backgroundColor = '#ECE5DD'; \n\nconst PageContainer = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n\nconst LeftPanel = styled.div`\n  flex: 1;\n  background: #000000;\n  position: relative;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  overflow: hidden;\n  @media (max-width: 900px) {\n  display: none;\n  }\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: url('https://example.com/background-image.jpg');\n    background-size: cover;\n    opacity: 0.5;\n    z-index: -1;\n  }\n\n  h1 {\n    font-size: 36px;\n    margin-bottom: 16px;\n    text-align: center;\n    text-shadow: rgb(34 122 67) 5px 2px 0px;\n    font-weight: 700;\n  }\n\n  p {\n    font-size: 18px;\n    max-width: 300px;\n    text-align: center;\n  }\n`;\n\nconst RightPanel = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n  background: url(/download.png);\n  background-position: center;\n  background-size: cover;\n`;\n\nconst FormContainer = styled.div`\n  max-width: 400px;\n  width: 100%;\n  button {\n    &:hover {\n    background: #19151f75;\n    }\n  }\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 8px;\n  font-size: 32px;\n  font-weight: 600;\n  text-align: center;\n  color: white;\n`;\n\nconst Subtitle = styled.p`\n  margin-bottom: 32px;\n  color: white;\n  text-align: center;\n`;\n\nconst InputField = styled.div`\n  margin-bottom: 16px;\n  position: relative;\n  color: white;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n  color: white;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  background: #1d0041df;\n  border-radius: 5px;\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  background-color: #1d0041df;\n  color: white;\n  padding: 12px;\n  border: none;\n  border-radius: 25px;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 16px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: ${secondaryColor};\n  }\n`;\n\nconst GoogleButton = styled.button`\n  width: 100%;\n  background-color: #db4437;\n  color: white;\n  padding: 12px;\n  border: none;\n  border-radius: 25px;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 16px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #c33d2e;\n  }\n`;\n\nconst LoginLink = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  margin-top: 16px;\n\n  i {\n    margin-right: 5px;\n  }\n\n  a {\n    color: #100122;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst LoginForm: React.FC = () => {\n  const { register, handleSubmit, formState: { errors, isValid } } = useForm<LoginFormInputs>({ mode: 'onChange' });\n  const toast: any = useRef(null);\n  const navigate = useNavigate(); \n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const { setChatSelected, setNumberSelected } = useChatContext();\n\n  const { postLogin, getResponse, loader } = useLogin();\n\n  const onSubmit = async (data: LoginFormInputs) => {\n    setShowToast(false);\n    setNumberSelected('0');\n    setChatSelected(null);\n\n    const response = await postLogin(data); \n    setShowToast(true);\n  };\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const handleGoogleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      const user = result.user;\n      // Mostrar los datos del usuario autenticado\n      console.log('Usuario autenticado:', user);\n      console.log('Nombre:', user.displayName);\n      console.log('Correo electrónico:', user.email);\n      console.log('Foto URL:', user.photoURL);\n      // Manejar el usuario autenticado\n      navigate('/init');\n    } catch (error) {\n      console.error('Error de autenticación con Google:', error);\n      if (toast) {\n        toast?.current?.show({\n          severity: 'error',\n          summary: 'Error de autenticación',\n          detail: 'No se pudo iniciar sesión con Google.',\n          life: 3000,\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (getResponse && getResponse?.statusCode === 401) {\n      if (showToast) {\n        showError();\n      }\n    } else {\n      if (getResponse) {\n        navigate('/init');\n      }\n    }\n  }, [loader, getResponse]);\n\n  const showError = () => {\n    if (toast) {\n      toast?.current?.show({\n        severity: 'error',\n        summary: 'Credenciales Incorrectas',\n        detail: 'El usuario o la contraseña son incorrectos.',\n        life: 3000,\n      });\n    }\n  };\n\n  return (\n    <PageContainer>\n      <Toast ref={toast} />\n\n      <LeftPanel>\n        <img src=\"/assets/logo_primary.png\" alt=\"Logo AliBot\" />\n      </LeftPanel>\n\n      <RightPanel>\n        <FormContainer>\n          <Title>Iniciar sesión</Title>\n          <Subtitle>Ingresa tus credenciales para acceder al panel de Alibot.</Subtitle>\n\n          {/* Formulario de inicio de sesión */}\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <InputField>\n              <Label htmlFor=\"username\">Correo electrónico</Label>\n              <Input\n                id=\"username\"\n                type=\"email\"\n                {...register('username', { required: 'Este campo es obligatorio' })}\n              />\n              {errors.username && <span>{errors.username.message}</span>}\n            </InputField>\n\n            <InputField>\n              <Label htmlFor=\"password\">Contraseña</Label>\n              <Input\n                id=\"password\"\n                type={passwordVisible ? 'text' : 'password'}\n                {...register('password', { required: 'Este campo es obligatorio' })}\n              />\n              {errors.password && <span>{errors.password.message}</span>}\n              <button\n                type=\"button\"\n                className=\"showPassword\"\n                onClick={togglePasswordVisibility}\n                style={{\n                  position: 'absolute',\n                  right: '10px',\n                  top: '70%',\n                  transform: 'translateY(-50%)',\n                  background: 'none',\n                  border: 'none',\n                  cursor: 'pointer'\n                }}\n              >\n                <i className={`pi ${passwordVisible ? 'pi-eye-slash' : 'pi-eye'}`} style={{ color: 'white'}}></i>\n              </button>\n            </InputField>\n\n            <SubmitButton type=\"submit\" disabled={!isValid || loader.loading}>\n              {loader.loading ? 'Cargando...' : 'Ingresar'}\n            </SubmitButton>\n          </form>\n\n          <GoogleButton onClick={handleGoogleLogin}>\n            Iniciar sesión con Google\n          </GoogleButton>\n\n          <LoginLink>\n            <Link to=\"/\"><i className=\"pi pi-arrow-left\"></i> Volver</Link>\n          </LoginLink>\n        </FormContainer>\n      </RightPanel>\n    </PageContainer>\n  );\n};\n\nexport default LoginForm;"
        }
    ]
}