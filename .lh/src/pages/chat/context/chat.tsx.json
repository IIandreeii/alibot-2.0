{
    "sourceFile": "src/pages/chat/context/chat.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1740155209119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740155214771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useState } from \"react\";\n import { inbox } from \"../data/inbox\";\n import { Inbox, InboxChat } from \"../../../common/types/common.type\";\n-import { useFirebase } from \"hooks/use-firebase\";\n+import { useFirebase } from \"../hooks/use-firebase\";\n import { objectToArray } from \"utils/object-to-array\";\n \n type User = {\n   name: string;\n"
                },
                {
                    "date": 1740155227039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from \"react\";\n import { inbox } from \"../data/inbox\";\n import { Inbox, InboxChat } from \"../../../common/types/common.type\";\n-import { useFirebase } from \"../hooks/use-firebase\";\n-import { objectToArray } from \"utils/object-to-array\";\n+import { useFirebase } from \"../../../hooks/use-firebase\";\n+import { objectToArray } from \"../../../utils/object-to-array\";\n \n type User = {\n   name: string;\n   image: string;\n"
                }
            ],
            "date": 1740155209119,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\nimport { inbox } from \"../data/inbox\";\nimport { Inbox, InboxChat } from \"../../../common/types/common.type\";\nimport { useFirebase } from \"hooks/use-firebase\";\nimport { objectToArray } from \"utils/object-to-array\";\n\ntype User = {\n  name: string;\n  image: string;\n};\n\ntype ChatContextProp = {\n  user: User;\n  inbox: Inbox[];\n  data: any[]\n  activeChat?: InboxChat;\n  onChangeChat: (chat: any) => void;\n  chatSelected: any;\n  setChatSelected:any ;\n  numberSelected: any;\n  setNumberSelected: any;\n  numbersKey: string[];\n  setNumbersKey: any;\n  showModal: boolean;\n  setShowModal: any;\n  chatIn?: any;\n  setChatIn: any;\n  searchChat : string;\n  setSearchChat: any\n  showMessageDialog : boolean;\n  setShowMessageDialog: any\n  showQuickRespModal: boolean\n  setShowQuickRespModal: any\n  showNewContactModal: boolean\n  setShowNewContactModal: any\n};\n\nconst initialValue: ChatContextProp = {\n  user: { name: \"Jazim Abbas\", image: \"/assets/images/girl.jpeg\" },\n  inbox,\n  data: [],\n  onChangeChat() {\n    throw new Error();\n  },\n  chatSelected: '',\n  setChatSelected: () => {},\n  numberSelected: '0',\n  setNumberSelected:  () => {},\n  numbersKey: [], \n  setNumbersKey:  () => {},\n  showModal: false,\n  setShowModal: () => {},\n  chatIn: '',\n  setChatIn: () => {},\n  searchChat: '',\n  setSearchChat: () => {},\n  showMessageDialog: false,\n  setShowMessageDialog: () => {},\n  showQuickRespModal: false,\n  setShowQuickRespModal: () => {},\n  showNewContactModal: false,\n  setShowNewContactModal: () => {},\n};\n\nexport const ChatContext = React.createContext<ChatContextProp>(initialValue);\n\nexport default function ChatProvider(props: { children: any }) {\n  const { children } = props;\n  const { keyList, getFromDatabase, response } = useFirebase()\n\n  const [user] = useState<User>(initialValue.user);\n  const [inbox] = useState<Inbox[]>(initialValue.inbox);\n  const [data, setData] = useState<any[]>(initialValue.data);\n  const [activeChat, setActiveChat] = useState<InboxChat>();\n  const [chatSelected, setChatSelected] = useState<InboxChat>();\n  const [numberSelected, setNumberSelected] = useState<string>(initialValue.numberSelected);\n  const [numbersKey, setNumbersKey] = useState<string[]>(keyList)\n  const [showModal, setShowModal] = useState(false);\n  \n  const [showMessageDialog, setShowMessageDialog] = useState(false);\n  const [showQuickRespModal, setShowQuickRespModal] = useState(false);\n  const [showNewContactModal, setShowNewContactModal] = useState(false);\n\n  const [chatIn, setChatIn] = useState<InboxChat>();\n  const [searchChat, setSearchChat] = useState<any>();\n\n  const handleChangeChat = (chat: InboxChat) => {\n    setActiveChat(chat);\n  };\n\n  useEffect(() => {    \n    setNumbersKey(keyList)\n  }, [keyList])\n  \n\n  useEffect(() => {\n    getFromDatabase(numberSelected)\n  }, [numberSelected])\n\n  useEffect(() => {\n    const listAll: InboxChat[] = objectToArray<InboxChat>(response)\n    \n    setData(listAll)\n  }, [response, numberSelected])\n\n  return (\n    <ChatContext.Provider value={{ user, inbox, data, activeChat, onChangeChat: handleChangeChat, \n      chatSelected, setChatSelected, numberSelected, setNumberSelected, numbersKey, setNumbersKey, \n      showModal, setShowModal, chatIn, setChatIn, searchChat, setSearchChat,\n      showMessageDialog, setShowMessageDialog, showQuickRespModal, setShowQuickRespModal, showNewContactModal, \n      setShowNewContactModal\n     }}>\n      {children}\n    </ChatContext.Provider>\n  );\n}\n\nexport const useChatContext = () => React.useContext(ChatContext);\n"
        }
    ]
}