{
    "sourceFile": "src/pages/chat/chat-room-page/components/footer/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1740155538362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740155547080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import Icon from \"../../../../../common/components/icons\";\n import { AttachButton, Button, ButtonsContainer, Divider, IconsWrapper, Input, SendMessageButton, SendQuickResponsButton, Wrapper } from \"./styles\";\n import { useParams } from \"react-router-dom\";\n import { environment } from \"environments/environment.prod\";\n-import { useChatContext } from \"pages/chat/context/chat\";\n+import { useChatContext } from \"../pages/chat/context/chat\";\n import FileUploadModal from \"../file-upload\";\n import { useSendMessage } from \"services/send-message/send-message.service\";\n import { useTokenUser } from \"../../hooks/useAuth\";\n import Cookies from 'js-cookie'; \n"
                },
                {
                    "date": 1740155553337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import Icon from \"../../../../../common/components/icons\";\n import { AttachButton, Button, ButtonsContainer, Divider, IconsWrapper, Input, SendMessageButton, SendQuickResponsButton, Wrapper } from \"./styles\";\n import { useParams } from \"react-router-dom\";\n import { environment } from \"environments/environment.prod\";\n-import { useChatContext } from \"../pages/chat/context/chat\";\n+import { useChatContext } from \"./pages/chat/context/chat\";\n import FileUploadModal from \"../file-upload\";\n import { useSendMessage } from \"services/send-message/send-message.service\";\n import { useTokenUser } from \"../../hooks/useAuth\";\n import Cookies from 'js-cookie'; \n"
                },
                {
                    "date": 1740155560091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import Icon from \"../../../../../common/components/icons\";\n import { AttachButton, Button, ButtonsContainer, Divider, IconsWrapper, Input, SendMessageButton, SendQuickResponsButton, Wrapper } from \"./styles\";\n import { useParams } from \"react-router-dom\";\n import { environment } from \"environments/environment.prod\";\n-import { useChatContext } from \"./pages/chat/context/chat\";\n+import { useChatContext } from \"../../../../../pages/chat/context/chat\";\n import FileUploadModal from \"../file-upload\";\n import { useSendMessage } from \"services/send-message/send-message.service\";\n import { useTokenUser } from \"../../hooks/useAuth\";\n import Cookies from 'js-cookie'; \n"
                },
                {
                    "date": 1740155569514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { useParams } from \"react-router-dom\";\n import { environment } from \"environments/environment.prod\";\n import { useChatContext } from \"../../../../../pages/chat/context/chat\";\n import FileUploadModal from \"../file-upload\";\n-import { useSendMessage } from \"services/send-message/send-message.service\";\n+import { useSendMessage } from \"../../../../../services/send-message/send-message.service\";\n import { useTokenUser } from \"../../hooks/useAuth\";\n import Cookies from 'js-cookie'; \n import QuickResponseModal from \"../quick-response\";\n \n"
                }
            ],
            "date": 1740155538362,
            "name": "Commit-0",
            "content": "import { useEffect, useState } from \"react\";\nimport Icon from \"../../../../../common/components/icons\";\nimport { AttachButton, Button, ButtonsContainer, Divider, IconsWrapper, Input, SendMessageButton, SendQuickResponsButton, Wrapper } from \"./styles\";\nimport { useParams } from \"react-router-dom\";\nimport { environment } from \"environments/environment.prod\";\nimport { useChatContext } from \"pages/chat/context/chat\";\nimport FileUploadModal from \"../file-upload\";\nimport { useSendMessage } from \"services/send-message/send-message.service\";\nimport { useTokenUser } from \"../../hooks/useAuth\";\nimport Cookies from 'js-cookie'; \nimport QuickResponseModal from \"../quick-response\";\n\nconst attachButtons = [\n  { icon: \"attachDocument\", label: \"Documentos\" },\n  { icon: \"attachImage\", label: \"Fotos y videos\" },\n];\n\ntype FooterProps = {\n  onSendMessage: Function;\n};\n\nexport default function Footer({ onSendMessage }: FooterProps) {\n  const { numberSelected, showModal, setShowModal, showQuickRespModal, setShowQuickRespModal } = useChatContext();\n  const [showIcons, setShowIcons] = useState(false);\n  const [valueText, setValueText] = useState(\"\");\n  const [isRotated, setIsRotated] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const { sendMessage } = useSendMessage();\n  const params = useParams();\n  const { token } = useTokenUser();\n\n  const handleQuickResponseModal = () => {\n    setIsRotated(false);\n    setShowQuickRespModal(true);\n    setShowIcons(false);\n  }\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.stopPropagation(); \n    const files = Array.from(event.target.files || []);\n  \n    setIsRotated(false)\n    if (selectedFiles.length + files.length <= 10) {\n      setSelectedFiles((prev) => [...prev, ...files]);\n      setShowModal(true);\n      setShowIcons(false); \n      \n    } else {\n      alert(\"Puedes seleccionar un máximo de 10 archivos.\");\n    }\n  };\n\n  useEffect(() => {\n    if (showModal === false) {\n      setSelectedFiles([]);\n      onSendMessage();\n    }\n  }, [showModal, onSendMessage]);\n\n  useEffect(() => {\n    if (showQuickRespModal === false) {\n      onSendMessage();\n    }\n  }, [showQuickRespModal, onSendMessage]);\n\n  const handleAttachClick = () => {    \n    setShowIcons(!showIcons);\n    setIsRotated(!isRotated);\n  };\n\n  const handleSendQuickResponse = (type: string, text: string) => {\n    if (text !== '') {\n      sendMessage({\n        phoneNumberId: numberSelected,\n        tokenMeta: token,\n        phone: params.id,\n        text: text,\n        type: type,\n      });\n    }\n\n    onSendMessage();\n    setShowQuickRespModal(false)\n  }\n\n  const handleSend = (urls: string[], description: string, fileType: string) => {\n    \n    if (urls?.length > 0) {\n      urls.forEach((file: any) => {\n        if (file?.type === 'image') {\n          sendMessage({\n            phoneNumberId: numberSelected,\n            tokenMeta: token,\n            phone: params.id,\n            urlImage: file?.url,\n            type: 'image',\n          });\n        } else {\n          sendMessage({\n            phoneNumberId: numberSelected,\n            tokenMeta: token,\n            phone: params.id,\n            urlVideo: file?.url,\n            type: 'video',\n            text: ''\n          });\n        }\n      });\n    }\n\n    if (valueText !== '') {\n      sendMessage({\n        phoneNumberId: numberSelected,\n        tokenMeta: token,\n        phone: params.id,\n        text: valueText,\n        type: 'text',\n      });\n      setValueText(\"\");\n    }\n\n    setSelectedFiles([]);\n    onSendMessage();\n    setShowModal(false);\n  };\n  \n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter' && valueText.trim() !== '') {\n      handleSend([], \"\", \"text\");\n      event.preventDefault(); \n    }\n  };\n\n  const handleButtonsContainerClick = (event: React.MouseEvent) => {\n    setShowIcons(false); \n    setIsRotated(false)\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <IconsWrapper className=\"IconsWrapper\">\n          <AttachButton onClick={handleAttachClick} isRotated={isRotated}>\n            <Icon id=\"cancel\" className=\"icon\" />\n          </AttachButton>\n          {showIcons && (\n            <ButtonsContainer>\n              <div onClick={handleButtonsContainerClick} />\n              <div>\n                {attachButtons.map((btn, index) => (\n                  <div key={btn.label}>\n                    <Button>\n                      <Icon id={btn.icon} />\n                      <input\n                        type=\"file\"\n                        accept=\"image/*,video/*,.pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt,.zip,.rar,.7z\"\n                        onChange={handleFileChange}\n                        onClick={(e) => e.stopPropagation()} \n                        style={{ display: \"none\" }}\n                        id={`fileInput-${index}`}\n                        multiple\n                      />\n                      <label htmlFor={`fileInput-${index}`}>{btn.label}</label>\n                    </Button>\n                    {index < attachButtons.length - 1 && <Divider />} {/* Agrega la línea divisoria */}\n                  </div>\n                ))}\n              </div>\n            </ButtonsContainer>\n          )}\n\n        </IconsWrapper>\n        <Input\n          placeholder=\"Escribe un mensaje\"\n          value={valueText}\n          onChange={(e) => setValueText(e.target.value)}\n          onKeyDown={handleKeyDown} \n        />\n        <SendMessageButton onClick={() => handleSend([], \"\", \"text\")}>\n          <Icon id=\"send\" className=\"icon\" />\n        </SendMessageButton>\n        <SendQuickResponsButton onClick={() => handleQuickResponseModal()}>\n          <Icon id=\"bot\" className=\"icon\" />\n        </SendQuickResponsButton>\n      </Wrapper>\n\n      <FileUploadModal\n        files={selectedFiles}\n        setFiles={setSelectedFiles}\n        onClose={() => setShowModal(false)}\n        onSend={handleSend}\n        isOpen={showModal}\n      />\n\n      <QuickResponseModal\n        onClose={() => setShowQuickRespModal(false)}\n        onSend={handleSendQuickResponse}\n        isOpen={showQuickRespModal}\n        phoneNumber={numberSelected}\n      />\n\n    </>\n  );\n}"
        }
    ]
}