{
    "sourceFile": "src/pages/chat/chat-room-page/components/single-message/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1740156349373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740156356521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import { forwardRef, useRef, useEffect } from \"react\";\n import { Tooltip } from \"primereact/tooltip\";\n import { Menu } from 'primereact/menu';\n-import Icon from \"../../../common/components/icons\";\n+import Icon from \"../../../../../common/components/icons\";\n import MessageComponent from \"../urlMessage\";\n import AudioMessage from \"../audioMessage\";\n-import MapComponent from \"common/components/map\";\n+import MapComponent from \"../../common/components/map\";\n import ImageMessage from \"../imageMessage\";\n import StickerMessage from \"../stickerMessage\";\n import VideoMessage from \"../videoMessage\";\n import { Template } from \"../templates\";\n"
                },
                {
                    "date": 1740157708439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { Menu } from 'primereact/menu';\n import Icon from \"../../../../../common/components/icons\";\n import MessageComponent from \"../urlMessage\";\n import AudioMessage from \"../audioMessage\";\n-import MapComponent from \"../../common/components/map\";\n+import MapComponent from \"../../../../../common/components/map\";\n import ImageMessage from \"../imageMessage\";\n import StickerMessage from \"../stickerMessage\";\n import VideoMessage from \"../videoMessage\";\n import { Template } from \"../templates\";\n@@ -120,15 +120,8 @@\n           onLoad={onAudioLoad}\n         />\n       )}\n \n-      {message.type === \"location\" && (\n-        <MapComponent\n-          lat={message?.latitude}\n-          lng={message?.longitude}\n-          onLoad={onMapLoad}\n-        />\n-      )}\n \n       {message.type === \"image\" && message.isOpponent && (\n         <ImageMessage\n           urlImage={message?.urlImage || message?.content}\n"
                }
            ],
            "date": 1740156349373,
            "name": "Commit-0",
            "content": "import { forwardRef, useRef, useEffect } from \"react\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport { Menu } from 'primereact/menu';\nimport Icon from \"../../../common/components/icons\";\nimport MessageComponent from \"../urlMessage\";\nimport AudioMessage from \"../audioMessage\";\nimport MapComponent from \"common/components/map\";\nimport ImageMessage from \"../imageMessage\";\nimport StickerMessage from \"../stickerMessage\";\nimport VideoMessage from \"../videoMessage\";\nimport { Template } from \"../templates\";\nimport { ChatMessage, ChatMessageFooter, ButtonContainer } from \"../messages-list/styles\";\nimport { MessageChat } from \"../messages-list/data/get-messages\";\nimport './styles'; // Importa los estilos personalizados\n\ninterface SingleMessageProps {\n  message: MessageChat;\n  isHighlighted: boolean;\n  backgroundColor: string;  // Nueva propiedad para cambiar el color de fondo\n  onImageLoad: () => void;\n  onVideoLoad: () => void;\n  onAudioLoad: () => void;\n  onStickerLoad: () => void;\n  onMapLoad: () => void;\n  onClick?: () => void;\n}\n\nconst customMenuStyles = `\n  .custom-menu .p-menu {\n    background-color: #ffffff;\n    border: 1px solid #e0e0e0;\n    border-radius: 8px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);\n  }\n  \n  .custom-menu .p-menuitem {\n    padding: 10px 20px;\n    color: #333;\n  }\n  \n  .custom-menu .p-menuitem .p-menuitem-icon {\n    color: #007bff;\n  }\n  \n  .custom-menu .p-menuitem .p-menuitem-text {\n    font-weight: 500;\n  }\n`;\n\nconst applyCustomStyles = () => {\n  const styleElement = document.createElement('style');\n  styleElement.textContent = customMenuStyles;\n  document.head.appendChild(styleElement);\n};\n\nconst SingleMessage = forwardRef<HTMLDivElement, SingleMessageProps>(({\n  message,\n  isHighlighted,\n  backgroundColor, // Color de fondo dinámico\n  onImageLoad,\n  onVideoLoad,\n  onAudioLoad,\n  onStickerLoad,\n  onMapLoad,\n  onClick\n}, ref) => {\n  useEffect(() => {\n    applyCustomStyles();\n  }, []);\n\n  const verifyTextUrl = (text: string) => {\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n    return urlRegex.test(text);\n  };\n\n  const isSentByUser = !message.isOpponent;\n  const menu = useRef<Menu>(null);\n\n  const items = [\n    { label: 'Info. Mensaje',  command: () => { /* acción para Opción 1 */ } },\n    { label: 'Responder',  command: () => { /* acción para Opción 2 */ } },\n    { label: 'copiar',  command: () => { /* acción para Opción 3 */ } },\n    { label: 'Reaccionar' ,command: () => { /* acción para Opción 3 */ } },\n    { label: 'Reenviar',  command: () => { /* acción para Opción 3 */ } },\n    { label: 'Fijar',  command: () => { /* acción para Opción 3 */ } },\n    { label: 'Destacar',  command: () => { /* acción para Opción 3 */ } },\n    { label: 'eliminar',  command: () => { /* acción para Opción 3 */ } },\n  ];\n\n  return (\n    <ChatMessage\n      className={`${message.isOpponent ? \"chat__msg--received\" : \"chat__msg--sent\"} ${isHighlighted ? \"highlighted-message\" : \"\"}`}\n      ref={ref}\n      style={{ backgroundColor }}  // Aplicar color de fondo\n      onClick={onClick}\n    >\n\n      {message?.flagError && (\n        <div className=\"error_send\">\n          <Tooltip target=\".custom-target-icon\" position={'left'} className=\"tooltip_custom\" />\n          <i className=\"custom-target-icon pi pi-info-circle\" data-pr-tooltip={message?.errorData} />\n        </div>\n      )}\n\n      {(message.type === \"text\" || message.type === \"button\") &&\n        (verifyTextUrl(message.text || message.content) ? (\n          <MessageComponent message={message.text || message.content} />\n        ) : (\n          <span dangerouslySetInnerHTML={{__html: message.content || message.text}} />\n        ))}\n\n      {message.type === \"template\" && (\n        <Template type={message?.content} content={message} />\n      )}\n\n      {message.type === \"audio\" && (\n        <AudioMessage\n          urlAudio={message?.urlAudio}\n          isDownload={\"isDownload\" in message}\n          onLoad={onAudioLoad}\n        />\n      )}\n\n      {message.type === \"location\" && (\n        <MapComponent\n          lat={message?.latitude}\n          lng={message?.longitude}\n          onLoad={onMapLoad}\n        />\n      )}\n\n      {message.type === \"image\" && message.isOpponent && (\n        <ImageMessage\n          urlImage={message?.urlImage || message?.content}\n          isDownload={(\"isDownload\" in message || (message.status === 'delivered' || message.status === 'read' ))}\n          onLoad={onImageLoad}\n        />\n      )}\n\n      {message.type === \"image\"  && !message.isOpponent && (\n        <ImageMessage\n          urlImage={message?.urlImage || message?.content}\n          isDownload={(\"isDownload\" in message || (message.status === 'delivered' || message.status === 'read' || message.status === 'sent'))}\n          onLoad={onImageLoad}\n        />\n      )}\n\n      {message.type === \"sticker\" && (\n        <StickerMessage\n          urlImage={message?.urlImage}\n          isDownload={\"isDownload\" in message}\n          onLoad={onStickerLoad}\n        />\n      )}\n\n      {message.type === \"video\" && (\n        <VideoMessage\n          urlVideo={message?.urlVideo}\n          content={message?.content}\n          isDownload={\"isDownload\" in message || !message?.isOpponent}\n          onLoad={onVideoLoad}\n        />\n      )}\n\n      <ChatMessageFooter>\n        <span>{message.timestamp}</span>\n        {!message.isOpponent && (\n          <Icon\n            id={`${message.status === \"sent\" ? \"singleTick\" : \"doubleTick\"}`}\n            className={`chat__msg-status-icon ${message.status === \"read\" ? \"chat__msg-status-icon--blue\" : \"\"}`}\n          />\n        )}\n      </ChatMessageFooter>\n\n      {isSentByUser && (\n        <ButtonContainer>\n          <Menu model={items} popup ref={menu} id=\"popup_menu\" className=\"custom-menu\" />\n          <button aria-label=\"sidebar-contact__btn\" onClick={(event) => menu.current?.toggle(event)}>\n            <Icon id=\"downArrow\" className=\"sidebar-contact__icon sidebar-contact__icon--dropdown\" />\n          </button>\n        </ButtonContainer>\n      )}\n    </ChatMessage>\n  );\n});\n\nexport default SingleMessage;"
        }
    ]
}