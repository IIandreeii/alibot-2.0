{
    "sourceFile": "src/pages/admin/components/sidebarActions/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1740153380726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740153387563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Tooltip } from 'primereact/tooltip';\n import 'primereact/resources/primereact.min.css';  // Componentes\n import 'primereact/resources/themes/lara-light-indigo/theme.css';  // Tema\n import LoaderComponent from 'pages/chat/components/loader';\n-import LoaderComponent from 'pages/chat/components/loader';\n+import LoaderComponent from '../../';\n import useWindowSize from \"../../../chat/hooks/useWindowSize\";\n \n const SidebarContainer = styled.div<{ isOpen: boolean, isDesktop: boolean }>`\n   grid-column: span 3 / span 3;\n"
                },
                {
                    "date": 1740153393568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n import { Tooltip } from 'primereact/tooltip';\n import 'primereact/resources/primereact.min.css';  // Componentes\n import 'primereact/resources/themes/lara-light-indigo/theme.css';  // Tema\n import LoaderComponent from 'pages/chat/components/loader';\n-import LoaderComponent from '../../';\n+import LoaderComponent from '../../../chat/components/loader';\n import useWindowSize from \"../../../chat/hooks/useWindowSize\";\n \n const SidebarContainer = styled.div<{ isOpen: boolean, isDesktop: boolean }>`\n   grid-column: span 3 / span 3;\n"
                },
                {
                    "date": 1740153400047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n import { motion } from 'framer-motion';\n import { Tooltip } from 'primereact/tooltip';\n import 'primereact/resources/primereact.min.css';  // Componentes\n import 'primereact/resources/themes/lara-light-indigo/theme.css';  // Tema\n-import LoaderComponent from 'pages/chat/components/loader';\n import LoaderComponent from '../../../chat/components/loader';\n import useWindowSize from \"../../../chat/hooks/useWindowSize\";\n \n const SidebarContainer = styled.div<{ isOpen: boolean, isDesktop: boolean }>`\n"
                }
            ],
            "date": 1740153380726,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Tooltip } from 'primereact/tooltip';\nimport 'primereact/resources/primereact.min.css';  // Componentes\nimport 'primereact/resources/themes/lara-light-indigo/theme.css';  // Tema\nimport LoaderComponent from 'pages/chat/components/loader';\nimport LoaderComponent from 'pages/chat/components/loader';\nimport useWindowSize from \"../../../chat/hooks/useWindowSize\";\n\nconst SidebarContainer = styled.div<{ isOpen: boolean, isDesktop: boolean }>`\n  grid-column: span 3 / span 3;\n  padding: 15px;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  transition: width 0.3s ease;\n  padding-top: 0;\n  position: relative;\n  @media (max-width: 768px) {\n    position: fixed;\n    top: 90px;\n    background: white;\n    left: 0px;\n    right: 0px;\n    width: 100%;\n    height: 100vh;\n    overflow-y: auto;\n    padding-top: 20px;\n  }\n  ${({ isOpen, isDesktop }) => !isOpen ? isDesktop ? '' : `grid-column: span 1 / span 1;` : ''}\n`;\n\nconst SidebarHeader = styled.div`\n  padding: 15px;\n  font-size: 18px;\n  font-weight: bold;\n  color: #333742;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nconst MenuItem = styled(motion.div) <{ isActive?: boolean }>`\n  display: flex;\n  align-items: center;\n  padding: 10px 15px;\n  cursor: pointer;\n  justify-content: space-between;\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.1) 3px 4px 7px 1px;\n  margin: 10px 0;\n  border-radius: 10px;\n  transition: background-color 0.3s;\n  position: relative;\n  ${({ isActive }) =>\n    isActive &&\n    `\n    color: #15c; \n    border-color: #15c;\n    p {\n      font-weight: 600;\n      color: #15c !important;\n      font-size: 15px;\n    }\n  `}\n\n  &:hover {\n    background-color: #e0e0e0;\n  }\n\n  i {\n    margin-right: 10px;\n  }\n  button {\n    i {\n      font-size: 12px;\n    }\n  }\n    > div {\n        p {\n            display: flex;\n            flex-direction: column;\n            font-weight: 600;\n            margin-top: -5px !important;\n            span {\n                font-weight: 400;\n            }\n        } \n    }\n`;\n\nconst SidebarContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\ninterface SidebarActionsProps {\n  isOpen: boolean;\n  selectedPhone: string;\n}\n\nconst SidebarActions: React.FC<SidebarActionsProps> = ({ isOpen, selectedPhone }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [key, setKey] = useState(0);\n  const isDesktop = useWindowSize();\n\n  const [hasChange, setHasChange] = useState(false)\n\n  useEffect(() => {\n    setHasChange(true)\n    const id = searchParams.get('id');\n    if (id) {\n      setKey((prev) => prev + 1);\n    }\n\n    setTimeout(() => setHasChange(false), 500);\n  }, [searchParams.get('id')]);\n\n  const menuItems = [\n    { icon: 'pi pi-clipboard', label: 'Plantilla', action: '1', description: 'Gestion de plantillas META.' },\n    { icon: 'pi pi-send', label: 'Respuestas Rápidas', action: '2', description: 'Gestion los mensajes automáticos.' },\n    { icon: 'pi pi-box', label: 'Tienda', action: '3', description: 'Gestion de tiendas SHOPIFY.' },\n    { icon: 'pi pi-gift', label: 'Productos', action: '4', description: 'Gestion de productos.' },\n  ];\n\n  const onToggleAction = (action: string) => {\n    const updatedParams = new URLSearchParams(searchParams);\n    updatedParams.set('id', selectedPhone);\n    updatedParams.set('acc', action);\n    setSearchParams(updatedParams, { replace: true });\n  };\n\n  const onToggleActionRemove = () => {\n    const updatedParams = new URLSearchParams(searchParams);\n\n    updatedParams.delete('phone');\n    updatedParams.delete('id');\n\n    setSearchParams(updatedParams, { replace: true });\n  };\n\n  return (\n    <SidebarContainer isOpen={!searchParams.get('acc')} isDesktop={!isDesktop}>\n\n      {!isDesktop && <div className=\"actionsReturn\">\n        <button onClick={() => onToggleActionRemove()}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n          </svg>\n        </button>\n      </div>}\n\n      <SidebarContent key={key}>\n        {isDesktop && <Tooltip target=\".custom-target-icon\" className='custom_tooltip' />}\n\n        {menuItems.map((item, index) => (\n          <MenuItem\n            key={item.action}\n            isActive={searchParams.get('acc') === item.action}\n            onClick={() => onToggleAction(item.action)}\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: index * 0.2, duration: 0.2 }}\n            className=\"custom-target-icon\"\n            data-pr-tooltip={item.label}\n            data-pr-position=\"right\"\n            data-pr-at=\"right+5 top\"\n            data-pr-my=\"left center-2\"\n          >\n\n            <div style={{ display: 'flex' }}>\n              <i className={item.icon}></i>\n              {\n                !searchParams.get('acc') &&\n                <p>\n                  {item.label}\n                  <span>{item.description}</span>\n                </p>\n              }\n\n\n            </div>\n            <button>\n              <i className='pi pi-chevron-right'></i>\n            </button>\n          </MenuItem>\n        ))}\n      </SidebarContent>\n\n      {hasChange && <LoaderComponent />}\n    </SidebarContainer>\n  );\n};\n\nexport default SidebarActions;\n"
        }
    ]
}