{
    "sourceFile": "src/pages/admin/components/dynamicTable/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1740153737501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740153744135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n import { Dialog } from \"primereact/dialog\";\n import FormPlantilla from \"./components/forms/form-plantilla\";\n import { confirmPopup, ConfirmPopup } from \"primereact/confirmpopup\";\n import { useTemplate } from \"services/template/template.service\";\n-import { useTemplate } from \"services/template/template.service\";\n+import { useTemplate } from \"../../../\";\n import FormRespuesta from \"./components/forms/form-respuesta\";\n import FormTienda from \"./components/forms/form-tienda\";\n import FormProducts from \"./components/forms/form-products\";\n import LoaderComponent from \"pages/chat/components/loader\";\n"
                },
                {
                    "date": 1740153750095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n import { Dialog } from \"primereact/dialog\";\n import FormPlantilla from \"./components/forms/form-plantilla\";\n import { confirmPopup, ConfirmPopup } from \"primereact/confirmpopup\";\n import { useTemplate } from \"services/template/template.service\";\n-import { useTemplate } from \"../../../\";\n+import { useTemplate } from \"../../../../services/\";\n import FormRespuesta from \"./components/forms/form-respuesta\";\n import FormTienda from \"./components/forms/form-tienda\";\n import FormProducts from \"./components/forms/form-products\";\n import LoaderComponent from \"pages/chat/components/loader\";\n"
                },
                {
                    "date": 1740153769346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n import { es } from \"date-fns/locale\";\n import { Dialog } from \"primereact/dialog\";\n import FormPlantilla from \"./components/forms/form-plantilla\";\n import { confirmPopup, ConfirmPopup } from \"primereact/confirmpopup\";\n-import { useTemplate } from \"services/template/template.service\";\n-import { useTemplate } from \"../../../../services/\";\n+\n+import { useTemplate } from \"../../../../services/template/template.service\";\n import FormRespuesta from \"./components/forms/form-respuesta\";\n import FormTienda from \"./components/forms/form-tienda\";\n import FormProducts from \"./components/forms/form-products\";\n import LoaderComponent from \"pages/chat/components/loader\";\n"
                },
                {
                    "date": 1740153775493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import { useTemplate } from \"../../../../services/template/template.service\";\n import FormRespuesta from \"./components/forms/form-respuesta\";\n import FormTienda from \"./components/forms/form-tienda\";\n import FormProducts from \"./components/forms/form-products\";\n-import LoaderComponent from \"pages/chat/components/loader\";\n+import LoaderComponent from \"../pages/chat/components/loader\";\n import { useChatContext } from \"pages/chat/context/chat\";\n import useWindowSize from \"../../../chat/hooks/useWindowSize\";\n import { Tooltip } from \"primereact/tooltip\";\n import Cookies from 'js-cookie';\n"
                },
                {
                    "date": 1740153787109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n import { useTemplate } from \"../../../../services/template/template.service\";\n import FormRespuesta from \"./components/forms/form-respuesta\";\n import FormTienda from \"./components/forms/form-tienda\";\n import FormProducts from \"./components/forms/form-products\";\n-import LoaderComponent from \"../pages/chat/components/loader\";\n-import { useChatContext } from \"pages/chat/context/chat\";\n+import LoaderComponent from \"../../../../pages/chat/components/loader\";\n+import { useChatContext } from \"../../../../pages/chat/context/chat\";\n import useWindowSize from \"../../../chat/hooks/useWindowSize\";\n import { Tooltip } from \"primereact/tooltip\";\n import Cookies from 'js-cookie';\n import { StyledDialog } from './styles';\n"
                }
            ],
            "date": 1740153737501,
            "name": "Commit-0",
            "content": "import { Button } from \"primereact/button\";\nimport { TieredMenu } from \"primereact/tieredmenu\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { format } from \"date-fns\";\nimport { es } from \"date-fns/locale\";\nimport { Dialog } from \"primereact/dialog\";\nimport FormPlantilla from \"./components/forms/form-plantilla\";\nimport { confirmPopup, ConfirmPopup } from \"primereact/confirmpopup\";\nimport { useTemplate } from \"services/template/template.service\";\nimport { useTemplate } from \"services/template/template.service\";\nimport FormRespuesta from \"./components/forms/form-respuesta\";\nimport FormTienda from \"./components/forms/form-tienda\";\nimport FormProducts from \"./components/forms/form-products\";\nimport LoaderComponent from \"pages/chat/components/loader\";\nimport { useChatContext } from \"pages/chat/context/chat\";\nimport useWindowSize from \"../../../chat/hooks/useWindowSize\";\nimport { Tooltip } from \"primereact/tooltip\";\nimport Cookies from 'js-cookie';\nimport { StyledDialog } from './styles';\n\nconst TableContainer = styled.div<{ isOpen: boolean }>`\n  height: 83vh;\n  grid-column: span 7 / span 7;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 15px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  overflow: auto;\n  position: relative;\n  @media (max-width: 768px) {\n    position: fixed;\n    top: 0;\n    background: white;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100vh;\n    overflow-y: auto;\n  }\n\n  ${({ isOpen }) => !isOpen && `grid-column: span 9 / span 9;`}\n\n  > div {\n    display: flex;\n    justify-content: space-between;\n    @media (max-width: 768px) {\n      flex-direction: column;\n      overflow: auto;\n    }\n    > input {\n      width: 50%;\n      padding: 10px;\n      border: 1px solid #f0f0f0;\n      border-radius: 5px;\n      margin-bottom: 20px;\n      @media (max-width: 768px) {\n        width: 100%;\n      }\n    }\n\n    > button {\n      width: fit-content;\n      background-color: #2D2E83;\n      color: white;\n      border: none;\n      border-radius: 10px;\n      padding: 5px 20px;\n      font-size: 16px;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      flex-direction: row-reverse;\n      transition: background-color 0.3s;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n      margin-bottom: 20px;\n      @media (max-width: 768px) {\n        width: 100%;\n        justify-content: center;\n        padding: 12px;\n      }\n      span {\n        margin-left: 10px;\n      }\n\n      &:hover {\n        background-color: #3C58A4;\n      }\n    }\n  }\n`;\n\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst TableHeaderCell = styled.th`\n  background-color: #f2f2f2;\n  padding: 10px;\n  text-align: left;\n  font-weight: bold;\n  border-bottom: 2px solid #ddd;\n  font-size: 13px;\n`;\n\nconst TableRow = styled.tr`\n  position: relative;\n  &:nth-child(even) {\n    background-color: #f9f9f9;\n  }\n  &:hover {\n    background-color: #f1f1f1;\n  }\n`;\n\nconst TableCell = styled.td`\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n  font-size: 13px;\n`;\n\nconst PaginationContainer = styled.div`\n  padding-bottom: 30px;\n  display: flex;\n  justify-content: center !important;\n  align-items: center;\n  margin-top: 10px;\n  @media (max-width: 768px) {\n          flex-direction: row !important;\n  }\n  button {\n    background-color: transparent !important;\n    color: #2D2E83 !important;\n    font-weight: bold;\n    box-shadow: none !important;\n    margin-bottom: 0px !important;\n  }\n`;\n\ninterface DynamicTableProps<T> {\n  data: T[];\n  postURL: string;\n  editURL: string;\n  deleteURL: string;\n  setLoaderService: (data: boolean) => void;\n}\n\nconst DynamicTable = <T extends { id: number }>({\n  data,\n  setLoaderService,\n}: DynamicTableProps<T>) => {\n  const headers = data.length > 0 ? Object.keys(data[0]).slice(1) : [];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [dataAction, setDataAction] = useState<any>({});\n  const { putDeleteTemplate, putDeleteRespuesta, putDeleteStore, putDeleteProduct,\n    postDuplicateTemplate, postDuplicateRespuesta, postDuplicateStore, postDuplicateProduct\n  } = useTemplate();\n  const [hasChange, setHasChange] = useState(false);\n\n  const itemsPerPage = 10;\n  const menuRef = React.useRef<any>(null);\n  const [visible, setVisible] = useState(false);\n  const [dataForm, setDataForm] = useState({ action: \"\", data: null });\n  const { setShowMessageDialog } = useChatContext();\n  const isDesktop = useWindowSize();\n\n  const filteredData = data\n    .sort((a: any, b: any) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n    .filter((item) =>\n      headers.some((header) =>\n        String((item as any)[header])\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase())\n      )\n    );\n\n  const paginatedData = filteredData.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n\n  const handleNextPage = () => {\n    if (currentPage < Math.ceil(filteredData.length / itemsPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const handleMenuClick = (event: React.MouseEvent, row: any) => {\n    event.preventDefault();\n\n    setDataAction(row);\n    menuRef.current?.toggle(event);\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return format(date, \"dd/MM/yy hh:mm a\", { locale: es });\n  };\n\n  const onOpenForm = () => {\n    setDataForm({ action: \"\", data: null });\n    setVisible(true);\n  };\n\n  const onCloseModal = () => {\n    setShowMessageDialog(false);\n    setVisible(false);\n  };\n\n  useEffect(() => {\n    setHasChange(true);\n\n    setTimeout(() => setHasChange(false), 500);\n  }, [searchParams.get(\"acc\")]);\n\n  const onDeleteUser = async (userID: any) => {\n    setLoaderService(true);\n    switch (searchParams.get(\"acc\")) {\n      case \"1\":\n        await putDeleteTemplate(userID);\n\n        break;\n      case \"2\":\n        await putDeleteRespuesta(userID);\n\n        break;\n      case \"3\":\n        await putDeleteStore(userID);\n\n        break;\n      case \"4\":\n        await putDeleteProduct(userID);\n        break;\n      default:\n        break;\n    }\n\n    setLoaderService(false);\n  };\n\n  const confirmDeleteUser = (userID: any) => {\n    const targetElementModal = document.querySelector(`#row_${userID}`) as HTMLElement;\n\n    confirmPopup({\n      className: \"dialog_table\",\n      appendTo: targetElementModal as HTMLElement,\n      message: \"¿Estás seguro de eliminar la plantilla?\",\n      icon: \"pi pi-exclamation-triangle\",\n      acceptLabel: 'SI',\n      rejectLabel: 'NO',\n      accept: () => {\n        onDeleteUser(userID);\n      },\n      reject: () => { },\n    });\n  };\n\n  interface Item {\n    id: number;\n    [key: string]: any;\n  }\n\n  const getMaxId = (items: Item[]): number => {\n    return items.reduce((maxId, item) => (item.id > maxId ? item.id : maxId), 0);\n  };\n\n  const appendCopia = (input: string): string => {\n    return `${input} copia ${getMaxId(paginatedData) + 1}`;\n  };\n\n  const onDuplicateData = async (data: any) => {\n    setLoaderService(true);\n    const dataID = Number(searchParams.get(\"id\"))\n    const phoneID = Number(searchParams.get(\"phone\"))\n    const storedId = Cookies.get('authId');\n\n    switch (searchParams.get(\"acc\")) {\n      case \"1\":\n        await\n          postDuplicateTemplate({\n            id: dataID,\n            code: appendCopia(data.code),\n            name: appendCopia(data.name),\n            text: appendCopia(data.text),\n            templateType: (data.templateType),\n          })\n\n        break;\n      case \"2\":\n        await\n\n          postDuplicateRespuesta({\n            id: dataID,\n            keyword: appendCopia(data.keyword),\n            templateType: data.templateType,\n            upsellVideo: appendCopia(data.upsellVideo),\n            upsellTextVideo: appendCopia(data.upsellTextVideo),\n            upsellText: appendCopia(data.upsellText),\n            upsellImage: appendCopia(data.upsellImage),\n            isConfirmed: data.isConfirmed,\n            isInformative: data.isInformative,\n          })\n\n        break;\n      case \"3\":\n        await\n          postDuplicateStore({\n            name: appendCopia(data.name),\n            userAlibot: appendCopia(data.userAlibot),\n            code: appendCopia(data.code),\n            storeDomain: appendCopia(data.storeDomain),\n            phoneNumberId: Number(dataID),\n            accountUserId: storedId\n          })\n\n        break;\n      case \"4\":\n        await\n          postDuplicateProduct({\n            storedId: data.storeId,\n            name: appendCopia(data.name),\n            storeId: data.storeId,\n            prompt: data.prompt,\n            temperature: data.temperature,\n            maxTokens: data.maxTokens,\n            id: dataID,\n          })\n        break;\n      default:\n        break;\n    }\n    setLoaderService(false);\n\n  };\n\n  const items = [\n    {\n      label: \"Editar\",\n      icon: \"pi pi-user-edit\",\n      command: () => {\n        setVisible(true);\n        setDataForm({ action: \"edit\", data: dataAction });\n      },\n    },\n    {\n      label: \"Eliminar\",\n      icon: \"pi pi-trash\",\n      command: () => confirmDeleteUser(dataAction.id),\n    },\n    {\n      label: \"Duplicar\",\n      icon: \"pi pi-copy\",\n      command: () => onDuplicateData(dataAction),\n    },\n  ];\n\n  const changeWord = (word: string) => {\n    switch (word) {\n      case \"name\":\n        return \"Nombre\";\n      case \"code\":\n        return \"Código\";\n      case \"templateType\":\n        return \"Plantilla\";\n      case \"text\":\n        return \"Texto\";\n      case \"createdAt\":\n        return \"Creado\";\n      case \"keyword\":\n        return \"Palabra clave\";\n\n      case \"upsellImage\":\n        return \"Url Imagen\";\n      case \"upsellText\":\n        return \"Texto\";\n      case \"upsellVideo\":\n        return \"Url Video\";\n      case \"storeDomain\":\n        return \"Tienda Shopify\";\n      case \"upsellTextVideo\":\n        return \"Texto de video\";\n      case \"userAlibot\":\n        return \"Usuario Alibot\";\n      case \"isConfirmed\":\n        return \"Confirmado\";\n\n      case \"isInformative\":\n        return \"Informativo\";\n\n      case \"prompt\":\n        return \"Prompt\";\n\n      case \"temperature\":\n        return \"Temperatura\";\n\n      case \"maxTokens\":\n        return \"Máx. tokens\";\n\n      case \"storeName\":\n        return \"Tienda\";\n      default:\n        break;\n    }\n  };\n\n  const formatTable = (text: any) => {\n    if (text?.length > 20) {\n      return (\n        <>\n          <Tooltip target=\".more_detail\" position={\"left\"} className=\"more_detail_tool\" />\n          <p className=\"more_detail\" data-pr-tooltip={text}>\n            {text.slice(0, 20) + \"...\"}\n          </p>\n        </>\n      );\n    }\n\n    return text;\n  };\n\n  const onToggleAction = () => {\n    const updatedParams = new URLSearchParams(searchParams);\n\n    updatedParams.set('id', searchParams.get('id') ?? '');\n    updatedParams.set('phone', searchParams.get('phone') ?? '');\n\n    updatedParams.delete('acc');\n\n    setSearchParams(updatedParams, { replace: true });\n  };\n\n  const truncateToTenChars = (value: string): string => {\n    return value.length > 40 ? value.substring(0, 40) + \"…\" : value;\n  };\n\n  const formatDateCell = (date: string): string => {\n    const formattedDate = new Date(date).toLocaleDateString();\n    return `<span>${truncateToTenChars(formattedDate)}</span>`; // Aplica la truncación\n  };\n\n  const formatTableCell = (value: any): string => {\n    const displayValue =\n      typeof value === \"object\" && value !== null\n        ? JSON.stringify(value)\n        : String(value);\n\n    return `<span>${truncateToTenChars(displayValue)}</span>`; // Aplica la truncación\n  };\n\n\n  return (\n    <TableContainer isOpen={!searchParams.get(\"acc\")}>\n      {!isDesktop && <div className=\"actionsReturn\">\n        <button onClick={() => onToggleAction()}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          >\n            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n          </svg>\n        </button>\n      </div>}\n\n      <h2 style={{ fontSize: \"16px\", marginBottom: \"10px\" }}>\n        <strong>Usando:</strong> {searchParams.get(\"phone\")}\n      </h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Buscar...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <Button onClick={() => onOpenForm()} icon=\"pi pi-plus-circle\" iconPos=\"left\">\n          Agregar Nuevo\n        </Button>\n      </div>\n      <div className=\"divTable\">\n        <StyledTable>\n          <thead>\n            <tr>\n              {headers.map((header) => (\n                <TableHeaderCell key={header}>{changeWord(header)}</TableHeaderCell>\n              ))}\n              <TableHeaderCell>Acciones</TableHeaderCell>\n            </tr>\n          </thead>\n          <tbody>\n            {paginatedData.map((row) => (\n              <TableRow key={row.id} id={`row_${row.id}`}>\n                {headers.map((header) => (\n                  <TableCell key={header}>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html:\n                          header === \"createdAt\"\n                            ? formatDateCell((row as any)[header])\n                            : formatTableCell((row as any)[header]),\n                      }}\n                    />\n                  </TableCell>\n\n                ))}\n                <TableCell onClick={() => setShowMessageDialog(true)}>\n                  <Button\n                    icon=\"pi pi-ellipsis-v\"\n                    onClick={(e: any) => handleMenuClick(e, row)}\n                    className=\"p-button-text\"\n                  />\n                  <TieredMenu model={items} ref={menuRef} popup id=\"menu\" />\n                </TableCell>\n              </TableRow>\n            ))}\n          </tbody>\n        </StyledTable>\n      </div>\n\n      {filteredData.length > itemsPerPage && (\n        <PaginationContainer>\n          <Button onClick={handlePrevPage} disabled={currentPage === 1}>\n            Anterior\n          </Button>\n          <p style={{ display: 'flex' }}>\n            <span>{currentPage} </span> <span>/ </span><span>{Math.ceil(filteredData.length / itemsPerPage)}</span>\n          </p>\n          <Button\n            onClick={handleNextPage}\n            disabled={currentPage === Math.ceil(filteredData.length / itemsPerPage)}\n          >\n            Siguiente\n          </Button>\n        </PaginationContainer>\n      )}\n\n      <StyledDialog\n        visible={visible}\n        onHide={onCloseModal}\n        style={{ width: '30vw', borderRadius: '15px', overflow: 'hidden' }}\n        breakpoints={{ '960px': '75vw', '641px': '100vw' }}\n      >\n        {searchParams.get(\"acc\") === \"1\" ? (\n          <FormPlantilla\n            dataEdit={dataForm}\n            id={searchParams.get(\"id\") || \"1\"}\n            closeModal={onCloseModal}\n            setLoaderService={setLoaderService}\n            isDeletingUser={false}\n          />\n        ) : searchParams.get(\"acc\") === \"2\" ? (\n          <FormRespuesta\n            dataEdit={dataForm}\n            id={searchParams.get(\"id\") || \"2\"}\n            closeModal={onCloseModal}\n            setLoaderService={setLoaderService}\n            isDeletingUser={false}\n          />\n        ) : searchParams.get(\"acc\") === \"3\" ? (\n          <FormTienda\n            dataEdit={dataForm}\n            id={searchParams.get(\"id\") || \"2\"}\n            closeModal={onCloseModal}\n            setLoaderService={setLoaderService}\n            isDeletingUser={false}\n          />\n        ) : (\n          <FormProducts\n            dataEdit={dataForm}\n            id={searchParams.get(\"id\") || \"2\"}\n            closeModal={onCloseModal}\n            setLoaderService={setLoaderService}\n            isDeletingUser={false}\n          />\n        )}\n      </StyledDialog>\n\n      {hasChange && <LoaderComponent />}\n    </TableContainer>\n  );\n};\n\nexport default DynamicTable;\n"
        }
    ]
}