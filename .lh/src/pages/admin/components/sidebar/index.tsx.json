{
    "sourceFile": "src/pages/admin/components/sidebar/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1740153465584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740153473765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from 'react';\n import { Button } from 'primereact/button';\n import { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\n import { usePhoneNumberWithLoader } from 'services/phone-number/getPhoneNumber.service';\n-import { usePhoneNumberWithLoader } from 'services/phone-number/getPhoneNumber.service';\n+import { usePhoneNumberWithLoader } from '../../../../';\n import { useChatContext } from 'pages/chat/context/chat';\n import { Container, CardContainer, StyledDialog } from './styles';\n import Card from '../card';\n import UserForm from '../form';\n"
                },
                {
                    "date": 1740153480606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,159 @@\n+import React, { useEffect, useState } from 'react';\n+import { Button } from 'primereact/button';\n+import { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\n+import { usePhoneNumberWithLoader } from 'services/phone-number/getPhoneNumber.service';\n+import { usePhoneNumberWithLoader } from '../../../../services/phone-number/getPhoneNumber.service';\n+import { useChatContext } from 'pages/chat/context/chat';\n+import { Container, CardContainer, StyledDialog } from './styles';\n+import Card from '../card';\n+import UserForm from '../form';\n+\n+export const Sidebar = ({ onCardClick }: { onCardClick: (phone: string) => void }) => {\n+  const [visible, setVisible] = useState(false);\n+  const [searchTerm, setSearchTerm] = useState('');\n+  const [loaderService, setLoaderService] = useState(false);\n+  const { getPhoneNumber, putPhoneDisabled, getResponse } = usePhoneNumberWithLoader();\n+  const [userId, setUserId] = useState({ action: 'edit', id: null, phoneNumberId: null, tokenMeta: null, nickname: null, wabaId: null, phone: null, openaiApiKey: null });\n+  const [isDeletingUser, setIsDeletingUser] = useState(false);\n+\n+  const { showMessageDialog, setShowMessageDialog } = useChatContext();\n+\n+  useEffect(() => {\n+    if (!loaderService) {\n+      getPhoneNumber();\n+    }\n+  }, [loaderService]);\n+\n+  const filteredPhones = getResponse?.filter((phone) =>\n+    phone?.phoneNumberId?.includes(searchTerm)\n+  );\n+\n+  const highlightMatch = (text: string) => {\n+    if (!searchTerm) return text;\n+    const parts = text.split(new RegExp(`(${searchTerm})`, 'gi'));\n+    return parts.map((part, index) =>\n+      part.toLowerCase() === searchTerm.toLowerCase() ? (\n+        <strong key={index} style={{ color: 'black' }}>{part}</strong>\n+      ) : (\n+        part\n+      )\n+    );\n+  };\n+\n+  const onCloseModal = () => {\n+    setVisible(false);\n+    setUserId({ action: 'edit', id: null, phoneNumberId: null, tokenMeta: null, nickname: null, wabaId: null, phone: null, openaiApiKey: null });\n+    setIsDeletingUser(false);\n+  };\n+\n+  useEffect(() => {\n+    setShowMessageDialog(true)\n+\n+    setTimeout(() => {\n+      if (userId?.action === 'edit' && userId.phoneNumberId) {\n+        setShowMessageDialog(false)\n+\n+        setVisible(true);\n+        setIsDeletingUser(false);\n+      }\n+\n+      if (userId?.action === 'delete' && userId.phoneNumberId) {\n+        confirmDeleteUser(userId.id);\n+      }\n+\n+      if (userId?.action === 'create') {\n+        setShowMessageDialog(false)\n+      }\n+\n+    }, 100);\n+  }, [userId, visible]);\n+\n+  const confirmDeleteUser = (userID: any) => {\n+    const targetElementModal = document.querySelector(`#sidebar-${userID}`) as HTMLElement;\n+\n+    setIsDeletingUser(true);\n+\n+    confirmPopup({\n+      appendTo: targetElementModal as HTMLElement,\n+      message: '¿Estás seguro de eliminar al usuario?',\n+      icon: 'pi pi-exclamation-triangle',\n+      accept: () => {\n+        onDeleteUser(userID);\n+        setIsDeletingUser(false);\n+      },\n+      reject: () => setIsDeletingUser(false),\n+    });\n+\n+    const targetElementDom = document.querySelector(`#sidebar-${userID}`) as HTMLElement;\n+    const parentScrollContainer = document.getElementById('sidebar') as HTMLElement;\n+\n+    if (targetElementDom && parentScrollContainer) {\n+      const targetOffsetTop = targetElementDom.offsetTop;\n+      const targetHeight = targetElementDom.offsetHeight;\n+      const containerHeight = parentScrollContainer.clientHeight;\n+\n+      const newScrollTop = targetOffsetTop - (containerHeight / 2) + (targetHeight / 2);\n+\n+      parentScrollContainer.scrollTo({\n+        top: newScrollTop,\n+        behavior: 'smooth',\n+      });\n+    }\n+  };\n+\n+  const onDeleteUser = async (userID: any) => {\n+    await putPhoneDisabled({ isActive: false }, userID);\n+    await getPhoneNumber();\n+  };\n+\n+  const onAddUser = () => {\n+    setUserId({ action: 'create', id: null, phoneNumberId: null, tokenMeta: null, nickname: null, wabaId: null, phone: null, openaiApiKey: null });\n+    setVisible(true);\n+  };\n+\n+  console.log('xasddasdsad', filteredPhones);\n+\n+\n+  return (\n+    <Container>\n+      <div>\n+        <input\n+          type=\"text\"\n+          placeholder=\"Buscar número...\"\n+          value={searchTerm}\n+          onChange={(e) => setSearchTerm(e.target.value)}\n+        />\n+        <Button label=\"Agregar número\" icon=\"pi pi-plus-circle\" iconPos=\"right\" onClick={() => onAddUser()} />\n+      </div>\n+\n+      <CardContainer id='sidebar'>\n+        {loaderService ? <p>Cargando...</p> :\n+          filteredPhones?.map((phone: any) => (\n+            <Card\n+              key={phone.id}\n+              id={`sidebar-${phone.id}`}\n+              data={phone}\n+              phone={highlightMatch(phone.nickname)}\n+              onCardClick={() => {\n+                setShowMessageDialog(false)\n+                onCardClick(phone.id)\n+\n+              }}\n+              setUserId={setUserId} />\n+          ))}\n+        {showMessageDialog && <ConfirmPopup className={\"toast_delete\"} />}\n+      </CardContainer>\n+\n+      <StyledDialog\n+        visible={visible}\n+        onHide={onCloseModal}\n+        style={{ width: '30vw', borderRadius: '15px', overflow: 'hidden' }}\n+        breakpoints={{ '960px': '75vw', '641px': '100vw' }}\n+      >\n+        <div style={{ padding: '1rem' }}>\n+          <UserForm closeModal={onCloseModal} setLoaderService={setLoaderService} dataEdit={userId} isDeletingUser={isDeletingUser} />\n+        </div>\n+      </StyledDialog>\n+    </Container>\n+  );\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740153491183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,168 +1,10 @@\n import React, { useEffect, useState } from 'react';\n import { Button } from 'primereact/button';\n import { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\n-import { usePhoneNumberWithLoader } from 'services/phone-number/getPhoneNumber.service';\n+\n import { usePhoneNumberWithLoader } from '../../../../services/phone-number/getPhoneNumber.service';\n import { useChatContext } from 'pages/chat/context/chat';\n-import { Container, CardContainer, StyledDialog } from './styles';\n-import Card from '../card';\n-import UserForm from '../form';\n-\n-export const Sidebar = ({ onCardClick }: { onCardClick: (phone: string) => void }) => {\n-  const [visible, setVisible] = useState(false);\n-  const [searchTerm, setSearchTerm] = useState('');\n-  const [loaderService, setLoaderService] = useState(false);\n-  const { getPhoneNumber, putPhoneDisabled, getResponse } = usePhoneNumberWithLoader();\n-  const [userId, setUserId] = useState({ action: 'edit', id: null, phoneNumberId: null, tokenMeta: null, nickname: null, wabaId: null, phone: null, openaiApiKey: null });\n-  const [isDeletingUser, setIsDeletingUser] = useState(false);\n-\n-  const { showMessageDialog, setShowMessageDialog } = useChatContext();\n-\n-  useEffect(() => {\n-    if (!loaderService) {\n-      getPhoneNumber();\n-    }\n-  }, [loaderService]);\n-\n-  const filteredPhones = getResponse?.filter((phone) =>\n-    phone?.phoneNumberId?.includes(searchTerm)\n-  );\n-\n-  const highlightMatch = (text: string) => {\n-    if (!searchTerm) return text;\n-    const parts = text.split(new RegExp(`(${searchTerm})`, 'gi'));\n-    return parts.map((part, index) =>\n-      part.toLowerCase() === searchTerm.toLowerCase() ? (\n-        <strong key={index} style={{ color: 'black' }}>{part}</strong>\n-      ) : (\n-        part\n-      )\n-    );\n-  };\n-\n-  const onCloseModal = () => {\n-    setVisible(false);\n-    setUserId({ action: 'edit', id: null, phoneNumberId: null, tokenMeta: null, nickname: null, wabaId: null, phone: null, openaiApiKey: null });\n-    setIsDeletingUser(false);\n-  };\n-\n-  useEffect(() => {\n-    setShowMessageDialog(true)\n-\n-    setTimeout(() => {\n-      if (userId?.action === 'edit' && userId.phoneNumberId) {\n-        setShowMessageDialog(false)\n-\n-        setVisible(true);\n-        setIsDeletingUser(false);\n-      }\n-\n-      if (userId?.action === 'delete' && userId.phoneNumberId) {\n-        confirmDeleteUser(userId.id);\n-      }\n-\n-      if (userId?.action === 'create') {\n-        setShowMessageDialog(false)\n-      }\n-\n-    }, 100);\n-  }, [userId, visible]);\n-\n-  const confirmDeleteUser = (userID: any) => {\n-    const targetElementModal = document.querySelector(`#sidebar-${userID}`) as HTMLElement;\n-\n-    setIsDeletingUser(true);\n-\n-    confirmPopup({\n-      appendTo: targetElementModal as HTMLElement,\n-      message: '¿Estás seguro de eliminar al usuario?',\n-      icon: 'pi pi-exclamation-triangle',\n-      accept: () => {\n-        onDeleteUser(userID);\n-        setIsDeletingUser(false);\n-      },\n-      reject: () => setIsDeletingUser(false),\n-    });\n-\n-    const targetElementDom = document.querySelector(`#sidebar-${userID}`) as HTMLElement;\n-    const parentScrollContainer = document.getElementById('sidebar') as HTMLElement;\n-\n-    if (targetElementDom && parentScrollContainer) {\n-      const targetOffsetTop = targetElementDom.offsetTop;\n-      const targetHeight = targetElementDom.offsetHeight;\n-      const containerHeight = parentScrollContainer.clientHeight;\n-\n-      const newScrollTop = targetOffsetTop - (containerHeight / 2) + (targetHeight / 2);\n-\n-      parentScrollContainer.scrollTo({\n-        top: newScrollTop,\n-        behavior: 'smooth',\n-      });\n-    }\n-  };\n-\n-  const onDeleteUser = async (userID: any) => {\n-    await putPhoneDisabled({ isActive: false }, userID);\n-    await getPhoneNumber();\n-  };\n-\n-  const onAddUser = () => {\n-    setUserId({ action: 'create', id: null, phoneNumberId: null, tokenMeta: null, nickname: null, wabaId: null, phone: null, openaiApiKey: null });\n-    setVisible(true);\n-  };\n-\n-  console.log('xasddasdsad', filteredPhones);\n-\n-\n-  return (\n-    <Container>\n-      <div>\n-        <input\n-          type=\"text\"\n-          placeholder=\"Buscar número...\"\n-          value={searchTerm}\n-          onChange={(e) => setSearchTerm(e.target.value)}\n-        />\n-        <Button label=\"Agregar número\" icon=\"pi pi-plus-circle\" iconPos=\"right\" onClick={() => onAddUser()} />\n-      </div>\n-\n-      <CardContainer id='sidebar'>\n-        {loaderService ? <p>Cargando...</p> :\n-          filteredPhones?.map((phone: any) => (\n-            <Card\n-              key={phone.id}\n-              id={`sidebar-${phone.id}`}\n-              data={phone}\n-              phone={highlightMatch(phone.nickname)}\n-              onCardClick={() => {\n-                setShowMessageDialog(false)\n-                onCardClick(phone.id)\n-\n-              }}\n-              setUserId={setUserId} />\n-          ))}\n-        {showMessageDialog && <ConfirmPopup className={\"toast_delete\"} />}\n-      </CardContainer>\n-\n-      <StyledDialog\n-        visible={visible}\n-        onHide={onCloseModal}\n-        style={{ width: '30vw', borderRadius: '15px', overflow: 'hidden' }}\n-        breakpoints={{ '960px': '75vw', '641px': '100vw' }}\n-      >\n-        <div style={{ padding: '1rem' }}>\n-          <UserForm closeModal={onCloseModal} setLoaderService={setLoaderService} dataEdit={userId} isDeletingUser={isDeletingUser} />\n-        </div>\n-      </StyledDialog>\n-    </Container>\n-  );\n-};\n-import React, { useEffect, useState } from 'react';\n-import { Button } from 'primereact/button';\n-import { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\n-import { usePhoneNumberWithLoader } from 'services/phone-number/getPhoneNumber.service';\n-import { usePhoneNumberWithLoader } from '../../../../';\n import { useChatContext } from 'pages/chat/context/chat';\n import { Container, CardContainer, StyledDialog } from './styles';\n import Card from '../card';\n import UserForm from '../form';\n"
                },
                {
                    "date": 1740153497652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\n \n import { usePhoneNumberWithLoader } from '../../../../services/phone-number/getPhoneNumber.service';\n import { useChatContext } from 'pages/chat/context/chat';\n-import { useChatContext } from 'pages/chat/context/chat';\n+import { useChatContext } from '../../';\n import { Container, CardContainer, StyledDialog } from './styles';\n import Card from '../card';\n import UserForm from '../form';\n \n"
                },
                {
                    "date": 1740153504470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\n \n import { usePhoneNumberWithLoader } from '../../../../services/phone-number/getPhoneNumber.service';\n import { useChatContext } from 'pages/chat/context/chat';\n-import { useChatContext } from '../../';\n+import { useChatContext } from '../../../chat/context/chat';\n import { Container, CardContainer, StyledDialog } from './styles';\n import Card from '../card';\n import UserForm from '../form';\n \n"
                }
            ],
            "date": 1740153465584,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\nimport { Button } from 'primereact/button';\nimport { ConfirmPopup, confirmPopup } from 'primereact/confirmpopup';\nimport { usePhoneNumberWithLoader } from 'services/phone-number/getPhoneNumber.service';\nimport { usePhoneNumberWithLoader } from 'services/phone-number/getPhoneNumber.service';\nimport { useChatContext } from 'pages/chat/context/chat';\nimport { Container, CardContainer, StyledDialog } from './styles';\nimport Card from '../card';\nimport UserForm from '../form';\n\nexport const Sidebar = ({ onCardClick }: { onCardClick: (phone: string) => void }) => {\n  const [visible, setVisible] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loaderService, setLoaderService] = useState(false);\n  const { getPhoneNumber, putPhoneDisabled, getResponse } = usePhoneNumberWithLoader();\n  const [userId, setUserId] = useState({ action: 'edit', id: null, phoneNumberId: null, tokenMeta: null, nickname: null, wabaId: null, phone: null, openaiApiKey: null });\n  const [isDeletingUser, setIsDeletingUser] = useState(false);\n\n  const { showMessageDialog, setShowMessageDialog } = useChatContext();\n\n  useEffect(() => {\n    if (!loaderService) {\n      getPhoneNumber();\n    }\n  }, [loaderService]);\n\n  const filteredPhones = getResponse?.filter((phone) =>\n    phone?.phoneNumberId?.includes(searchTerm)\n  );\n\n  const highlightMatch = (text: string) => {\n    if (!searchTerm) return text;\n    const parts = text.split(new RegExp(`(${searchTerm})`, 'gi'));\n    return parts.map((part, index) =>\n      part.toLowerCase() === searchTerm.toLowerCase() ? (\n        <strong key={index} style={{ color: 'black' }}>{part}</strong>\n      ) : (\n        part\n      )\n    );\n  };\n\n  const onCloseModal = () => {\n    setVisible(false);\n    setUserId({ action: 'edit', id: null, phoneNumberId: null, tokenMeta: null, nickname: null, wabaId: null, phone: null, openaiApiKey: null });\n    setIsDeletingUser(false);\n  };\n\n  useEffect(() => {\n    setShowMessageDialog(true)\n\n    setTimeout(() => {\n      if (userId?.action === 'edit' && userId.phoneNumberId) {\n        setShowMessageDialog(false)\n\n        setVisible(true);\n        setIsDeletingUser(false);\n      }\n\n      if (userId?.action === 'delete' && userId.phoneNumberId) {\n        confirmDeleteUser(userId.id);\n      }\n\n      if (userId?.action === 'create') {\n        setShowMessageDialog(false)\n      }\n\n    }, 100);\n  }, [userId, visible]);\n\n  const confirmDeleteUser = (userID: any) => {\n    const targetElementModal = document.querySelector(`#sidebar-${userID}`) as HTMLElement;\n\n    setIsDeletingUser(true);\n\n    confirmPopup({\n      appendTo: targetElementModal as HTMLElement,\n      message: '¿Estás seguro de eliminar al usuario?',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        onDeleteUser(userID);\n        setIsDeletingUser(false);\n      },\n      reject: () => setIsDeletingUser(false),\n    });\n\n    const targetElementDom = document.querySelector(`#sidebar-${userID}`) as HTMLElement;\n    const parentScrollContainer = document.getElementById('sidebar') as HTMLElement;\n\n    if (targetElementDom && parentScrollContainer) {\n      const targetOffsetTop = targetElementDom.offsetTop;\n      const targetHeight = targetElementDom.offsetHeight;\n      const containerHeight = parentScrollContainer.clientHeight;\n\n      const newScrollTop = targetOffsetTop - (containerHeight / 2) + (targetHeight / 2);\n\n      parentScrollContainer.scrollTo({\n        top: newScrollTop,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  const onDeleteUser = async (userID: any) => {\n    await putPhoneDisabled({ isActive: false }, userID);\n    await getPhoneNumber();\n  };\n\n  const onAddUser = () => {\n    setUserId({ action: 'create', id: null, phoneNumberId: null, tokenMeta: null, nickname: null, wabaId: null, phone: null, openaiApiKey: null });\n    setVisible(true);\n  };\n\n  console.log('xasddasdsad', filteredPhones);\n\n\n  return (\n    <Container>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Buscar número...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <Button label=\"Agregar número\" icon=\"pi pi-plus-circle\" iconPos=\"right\" onClick={() => onAddUser()} />\n      </div>\n\n      <CardContainer id='sidebar'>\n        {loaderService ? <p>Cargando...</p> :\n          filteredPhones?.map((phone: any) => (\n            <Card\n              key={phone.id}\n              id={`sidebar-${phone.id}`}\n              data={phone}\n              phone={highlightMatch(phone.nickname)}\n              onCardClick={() => {\n                setShowMessageDialog(false)\n                onCardClick(phone.id)\n\n              }}\n              setUserId={setUserId} />\n          ))}\n        {showMessageDialog && <ConfirmPopup className={\"toast_delete\"} />}\n      </CardContainer>\n\n      <StyledDialog\n        visible={visible}\n        onHide={onCloseModal}\n        style={{ width: '30vw', borderRadius: '15px', overflow: 'hidden' }}\n        breakpoints={{ '960px': '75vw', '641px': '100vw' }}\n      >\n        <div style={{ padding: '1rem' }}>\n          <UserForm closeModal={onCloseModal} setLoaderService={setLoaderService} dataEdit={userId} isDeletingUser={isDeletingUser} />\n        </div>\n      </StyledDialog>\n    </Container>\n  );\n};"
        }
    ]
}